{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\n\nfunction compareNearestIndex(a, b) {\n  return a.nearestIndex - b.nearestIndex;\n}\n\nlet rates = [{\n  name: 'small',\n  rate: 20\n}, {\n  name: 'medium',\n  rate: 60\n}, {\n  name: 'large',\n  rate: 100\n}];\n\nclass ParkingLot {\n  constructor(parkingData) {\n    this.slots = [];\n    this.parkingData = {};\n    this.slots = parkingData.slots;\n    this.parkingData = parkingData.data;\n  }\n\n  park(vals) {\n    let {\n      numberPlate,\n      size,\n      entry\n    } = vals;\n    let sizeOption = size === 'large' ? ['large'] : size === 'medium' ? ['medium', 'large'] : size === 'small' ? ['small', 'medium', 'large'] : [];\n    let prioritySlots = [];\n\n    if (this.slots.every(slot => slot.isBusy !== false)) {\n      return false;\n    } //Map slots and return nearest entrance attribute.\n\n\n    let mappedData = this.slots.map(a => {\n      let ind = a.nearestEntrance.indexOf(Number(entry));\n      return { ...a,\n        nearestIndex: ind\n      };\n    }).filter(a => !a.isBusy); // let sortData = mappedData.sort(compareNearestIndex);\n    //Filter All Slots By Nearest from entered entrance.\n    // let nearer = this.slots.filter(a => a.nearestEntrance())\n    //Filter By Slots Size constraint.\n\n    for (let sz of sizeOption) {\n      let fltrSize = mappedData.filter(a => {\n        return a.slotType === sz || a.nearestIndex === entry;\n      });\n      prioritySlots = [...prioritySlots, ...fltrSize];\n    } //Get First Value on the Array.\n\n\n    let sortedSlots = prioritySlots.sort(compareNearestIndex);\n    let slot = sortedSlots[0];\n\n    if (!slot) {\n      console.log('No Slot Available!');\n      return false;\n    }\n\n    vals.slot = slot;\n    vals.parkedStart = new Date();\n    vals.slotType = slot.slotType;\n    vals.carType = size; // for (let i = 0; i <= this.slots.length; i++) {\n    //   const slot = this.slots[i];\n    //   if (slot === null) {\n    //     this.slots[i] = carId;\n    //     return true;\n    //   }\n    // }\n\n    return axios.post(`http://localhost:4000/park`, vals).then(_ref => {\n      let {\n        data\n      } = _ref;\n      return data;\n    }).catch(err => {\n      console.log(err);\n    }); // return dta\n  }\n\n  remove(_id) {\n    console.log(`Leaving car: ${_id}`);\n\n    if (this.slots.every(slot => slot._id !== _id)) {\n      return false;\n    }\n\n    return axios.get(`http://localhost:4000/unpark/${_id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return data;\n    }).catch(err => {\n      console.log(err);\n      return err;\n    });\n  }\n\n  compute() {\n    let vals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let start = moment(vals.parkedStart);\n    let rt = rates.find(a => a.name === vals.slotType);\n    let due = 0;\n    let hrs = moment().diff(start, 'hours');\n\n    if (hrs < 3) {\n      due = 40;\n    }\n\n    if (hrs >= 24) {\n      let d = Math.floor(hrs / 24);\n      let td = d * 24;\n      let exc = hrs - td;\n      let ttd = 5000 * d;\n      let th = exc * Number(rt.rate);\n      due = ttd + th + 40;\n    }\n\n    if (hrs < 24 && hrs > 3) {\n      let th = hrs * Number(rt.rate);\n      due = th;\n    }\n\n    return {\n      hours: hrs,\n      due,\n      type: vals.slotType,\n      rate: rt.rate\n    };\n  }\n\n  getSlots() {\n    console.log(`Parking slots: ${this.slots}`);\n    return this.slots;\n  }\n\n  getSize() {\n    console.log(`Parking size is: ${this.slots.length}`);\n    return this.slots.length;\n  }\n\n  getAvailable() {\n    const availableSlots = this.slots.filter(s => !s.isBusy).length;\n    console.log(`Available parking slots: ${availableSlots}`);\n    return availableSlots;\n  }\n\n  isFull() {\n    return this.getAvailable() === 0;\n  }\n\n  getAllSlots(id) {\n    return axios.get(`http://localhost:4000/slots/${id}`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      this.slots = data;\n      return data;\n    }).catch(err => {\n      return [];\n    });\n  }\n\n}\n\nexport default ParkingLot;","map":{"version":3,"names":["axios","moment","compareNearestIndex","a","b","nearestIndex","rates","name","rate","ParkingLot","constructor","parkingData","slots","data","park","vals","numberPlate","size","entry","sizeOption","prioritySlots","every","slot","isBusy","mappedData","map","ind","nearestEntrance","indexOf","Number","filter","sz","fltrSize","slotType","sortedSlots","sort","console","log","parkedStart","Date","carType","post","then","catch","err","remove","_id","get","compute","start","rt","find","due","hrs","diff","d","Math","floor","td","exc","ttd","th","hours","type","getSlots","getSize","length","getAvailable","availableSlots","s","isFull","getAllSlots","id"],"sources":["C:/Users/jaybee/Desktop/test/00parking/xyz-parking/src/lib/parking-lot.js"],"sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nfunction compareNearestIndex(a, b) {\r\n  return a.nearestIndex - b.nearestIndex;\r\n}\r\n\r\nlet rates = [\r\n  {name: 'small', rate: 20},\r\n  {name: 'medium', rate: 60},\r\n  {name: 'large', rate: 100},\r\n]\r\n\r\nclass ParkingLot {\r\n  slots = [];\r\n  parkingData = {};\r\n\r\n  constructor(parkingData) {\r\n    this.slots = parkingData.slots;\r\n    this.parkingData = parkingData.data;\r\n  }\r\n\r\n  park(vals) {\r\n    let {numberPlate, size, entry} = vals;\r\n    let sizeOption = size === 'large' ? ['large'] : size === 'medium' ? ['medium', 'large'] : size === 'small' ? ['small', 'medium', 'large'] : [];\r\n    let prioritySlots = [];\r\n    if (this.slots.every((slot) => slot.isBusy !== false)) {\r\n      return false;\r\n    }\r\n\r\n    //Map slots and return nearest entrance attribute.\r\n    let mappedData = this.slots.map(a => {\r\n        let ind = a.nearestEntrance.indexOf(Number(entry));\r\n      return {...a, nearestIndex: ind}\r\n    }).filter(a => !a.isBusy);\r\n\r\n\r\n    // let sortData = mappedData.sort(compareNearestIndex);\r\n\r\n\r\n    //Filter All Slots By Nearest from entered entrance.\r\n    // let nearer = this.slots.filter(a => a.nearestEntrance())\r\n\r\n\r\n    //Filter By Slots Size constraint.\r\n    for(let sz of sizeOption){\r\n\r\n\r\n    let fltrSize = mappedData.filter(a => {\r\n         return (a.slotType === sz || a.nearestIndex === entry);\r\n    });\r\n    prioritySlots = [...prioritySlots, ...fltrSize]\r\n\r\n  }\r\n\r\n\r\n\r\n    //Get First Value on the Array.\r\n    let sortedSlots = prioritySlots.sort(compareNearestIndex);\r\n    let slot = sortedSlots[0];\r\n\r\n\r\n    if (!slot) {\r\n      console.log('No Slot Available!')\r\n      return false;\r\n    }\r\n\r\n    vals.slot = slot;\r\n    vals.parkedStart = new Date;\r\n    vals.slotType = slot.slotType;\r\n    vals.carType = size;\r\n\r\n\r\n    // for (let i = 0; i <= this.slots.length; i++) {\r\n    //   const slot = this.slots[i];\r\n\r\n\r\n\r\n    //   if (slot === null) {\r\n    //     this.slots[i] = carId;\r\n    //     return true;\r\n    //   }\r\n    // }\r\n    return  axios.post(`http://localhost:4000/park`, vals)\r\n    .then(({data}) => {\r\n        return data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n    // return dta\r\n  }\r\n\r\n\r\n  remove(_id) {\r\n    console.log(`Leaving car: ${_id}`);\r\n    if (this.slots.every((slot) => slot._id !== _id)) {\r\n      return false;\r\n    }\r\n\r\n\r\n    return axios.get(`http://localhost:4000/unpark/${_id}`)\r\n    .then(({data}) => {\r\n        return data\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      return err\r\n    })\r\n  }\r\n\r\n  compute(vals = {}) {\r\n    let start = moment(vals.parkedStart);\r\n    let rt = rates.find(a => a.name === vals.slotType)\r\n    let due = 0;\r\n   let hrs = moment().diff(start, 'hours');\r\n\r\n    if(hrs < 3){\r\n      due = 40;\r\n    }\r\n\r\n    if(hrs >= 24){\r\n      let d = Math.floor(hrs / 24);\r\n      let td = d * 24;\r\n      let exc = hrs - td;\r\n      let ttd = 5000 * d;\r\n      let th = exc * Number(rt.rate);\r\n      due = ttd + th + 40;\r\n    }\r\n\r\n    if(hrs < 24 && hrs > 3){\r\n      let th = hrs * Number(rt.rate);\r\n      due = th;\r\n    }\r\n\r\n\r\n\r\n    return {\r\n      hours: hrs,\r\n      due,\r\n      type: vals.slotType,\r\n      rate: rt.rate\r\n    };\r\n  }\r\n\r\n\r\n  getSlots() {\r\n    console.log(`Parking slots: ${this.slots}`);\r\n    return this.slots;\r\n  }\r\n\r\n  getSize() {\r\n    console.log(`Parking size is: ${this.slots.length}`);\r\n    return this.slots.length;\r\n  }\r\n\r\n  getAvailable() {\r\n    const availableSlots = this.slots.filter((s) => !s.isBusy).length;\r\n    console.log(`Available parking slots: ${availableSlots}`);\r\n    return availableSlots;\r\n  }\r\n\r\n  isFull() {\r\n    return this.getAvailable() === 0;\r\n  }\r\n\r\n  getAllSlots (id){\r\n    return axios.get(`http://localhost:4000/slots/${id}`)\r\n    .then(({data}) => {\r\n        this.slots = data;\r\n        return data\r\n    })\r\n    .catch(err => {\r\n      return []\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default ParkingLot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}